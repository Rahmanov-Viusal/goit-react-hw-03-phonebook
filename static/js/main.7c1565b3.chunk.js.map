{"version":3,"sources":["components/FilterContact/FilterContact.module.scss","components/Container/Container.module.scss","components/ContatctList/ContactList.module.scss","components/ContactForm/ContactForm.module.scss","components/ContactForm/ContactForm.js","components/ContatctList/ContactList.js","components/FilterContact/FilterContact.js","components/Section/Section.js","components/Container/Container.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","onSubmitForm","preventDefault","console","log","props","handleSubmitForm","reset","this","className","s","form","onSubmit","form__input","onChange","type","pattern","title","required","placeholder","btn","Component","Contacts","onDeleteContact","list","length","filterList","map","id","filterListItem","text","span","onClick","FilterContact","filter","label","filterInput","Section","children","Container","container","App","contacts","takeCurrentValue","getFilterContact","normalizedFilter","toLowerCase","includes","contact","shortid","generate","find","alert","contactId","localStorage","getItem","parseContact","JSON","parse","prevProps","prevState","setItem","stringify","filtered","ContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c1565b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContact_label__b--0h\",\"filterInput\":\"FilterContact_filterInput__8P1R6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3rR7K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterList\":\"ContactList_filterList__2YIH0\",\"filterListItem\":\"ContactList_filterListItem__2uPOx\",\"text\":\"ContactList_text__21XSk\",\"span\":\"ContactList_span__KP1vi\",\"btn\":\"ContactList_btn__348no\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__Tnpm-\",\"form__input\":\"ContactForm_form__input__27q6Q\",\"btn\":\"ContactForm_btn__1bzng\"};","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport s from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  onSubmitForm = e => {\n    e.preventDefault();\n    console.log(this.state);\n    this.props.handleSubmitForm(this.state);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.onSubmitForm}>\n        <label>\n          Name\n          <input\n            className={s.form__input}\n            onChange={this.handleChange}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            placeholder=\"Ivan Ivanov\"\n          />\n        </label>\n        <label>\n          Number\n          <input\n            className={s.form__input}\n            onChange={this.handleChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            placeholder=\"+38 (099) 999-99-99\"\n          />\n        </label>\n        <button className={s.btn}>add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  handleSubmitForm: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.scss';\n\nconst Contacts = ({ onDeleteContact, list }) => {\n  console.log(list);\n  if (list.length === 0) return null;\n  return (\n    <ul className={s.filterList}>\n      {list.map(({ id, number, name }) => (\n        <li className={s.filterListItem} key={id}>\n          <p className={s.text}>\n            {name}: <span className={s.span}>{number}</span>\n          </p>\n\n          <button\n            className={s.btn}\n            onClick={() => onDeleteContact(id)}\n            type=\"button\"\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContacts.propTypes = {\n  onDeleteContact: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\n};\n\nexport default Contacts;\n","import PropTypes from 'prop-types';\nimport s from './FilterContact.module.scss';\n\nconst FilterContact = ({ value, filter }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input className={s.filterInput} onChange={value} value={filter} />\n    </label>\n  );\n};\n\nFilterContact.propTypes = {\n  value: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default FilterContact;\n","const Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import s from './Container.module.scss';\nimport React from 'react';\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nexport default Container;\n","import { Component } from 'react';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContatctList';\nimport FilterContact from './components/FilterContact';\nimport Section from './components/Section';\nimport Container from './components/Container';\nimport shortid from 'shortid';\nimport 'modern-normalize/modern-normalize.css';\nclass App extends Component {\n  state = {\n    filter: '',\n    contacts: [],\n  };\n  componentDidMount() {\n    const contact = localStorage.getItem('contact');\n    const parseContact = JSON.parse(contact);\n    if (parseContact) {\n      this.setState({ contacts: parseContact });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contact', JSON.stringify(contacts));\n    }\n  }\n  takeCurrentValue = e => {\n    const { value } = e.currentTarget;\n    this.setState({ filter: value });\n  };\n  getFilterContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  handleSubmitForm = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    if (this.state.contacts.find(({ name }) => name === contact.name)) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n    this.setState(({ contacts }) => ({ contacts: [...contacts, contact] }));\n  };\n\n  onDeleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filtered = this.getFilterContact();\n\n    return (\n      <Container className=\"App\">\n        <Section title=\"Phonebook\">\n          <ContactForm handleSubmitForm={this.handleSubmitForm} />\n        </Section>\n        <Section title=\"Contacts\">\n          <FilterContact value={this.takeCurrentValue} filter={filter} />\n          <ContactList onDeleteContact={this.onDeleteContact} list={filtered} />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}